import 'dart:math';
import 'web_scraper_service.dart';

class ContentRewriterService {
  static ContentRewriterService? _instance;
  static ContentRewriterService get instance => _instance ??= ContentRewriterService._();
  
  ContentRewriterService._();
  
  /// Reescribir noticia autom√°ticamente para evitar problemas legales
  Future<RewrittenContent> rewriteNews(String originalTitle, String originalContent, String category) async {
    try {
      print('üîÑ Reescribiendo noticia: $originalTitle');
      
      // En producci√≥n, aqu√≠ se usar√≠a una API de IA real (OpenAI, Claude, etc.)
      // Por ahora, usamos transformaciones autom√°ticas avanzadas
      
      final rewrittenTitle = _rewriteTitle(originalTitle);
      final rewrittenContent = _rewriteContent(originalContent);
      final summary = _generateSummary(rewrittenContent);
      final imageUrl = _getRelevantImage(category);
      
      print('‚úÖ Noticia reescrita exitosamente');
      
      return RewrittenContent(
        title: rewrittenTitle,
        content: rewrittenContent,
        summary: summary,
        imageUrl: imageUrl,
        originalTitle: originalTitle,
        originalContent: originalContent,
      );
    } catch (e) {
      print('‚ùå Error reescribiendo noticia: $e');
      // Fallback: devolver contenido original con cambios m√≠nimos
      return RewrittenContent(
        title: _rewriteTitle(originalTitle),
        content: _rewriteContent(originalContent),
        summary: _generateSummary(originalContent),
        imageUrl: _getRelevantImage(category),
        originalTitle: originalTitle,
        originalContent: originalContent,
      );
    }
  }
  
  /// Reescribir t√≠tulo
  String _rewriteTitle(String originalTitle) {
    String title = originalTitle;
    
    // Reemplazos de palabras clave
    final titleReplacements = {
      'Otaola': 'Presentador cubano',
      'Alexander Otaola': 'Presentador cubano',
      'cubaenmiami.com': 'CubaLink Noticias',
      'Cuba en Miami': 'CubaLink Noticias',
      'Miami Web Marketing': 'CubaLink Noticias',
    };
    
    titleReplacements.forEach((original, replacement) {
      title = title.replaceAll(original, replacement);
    });
    
    // Agregar prefijo de marca
    if (!title.startsWith('CubaLink Noticias:')) {
      title = 'CubaLink Noticias: $title';
    }
    
    return title;
  }
  
  /// Reescribir contenido
  String _rewriteContent(String originalContent) {
    String content = originalContent;
    
    // Reemplazos de palabras clave
    final contentReplacements = {
      'Otaola': 'el presentador cubano',
      'Alexander Otaola': 'el presentador cubano',
      'cubaenmiami.com': 'CubaLink Noticias',
      'Cuba en Miami': 'CubaLink Noticias',
      'Miami Web Marketing': 'CubaLink Noticias',
      'EE.UU.': 'Estados Unidos',
      'EE.UU': 'Estados Unidos',
    };
    
    contentReplacements.forEach((original, replacement) {
      content = content.replaceAll(original, replacement);
    });
    
    // Expandir contenido con p√°rrafos adicionales
    content = _expandContent(content);
    
    return content;
  }
  
  /// Expandir contenido con p√°rrafos adicionales
  String _expandContent(String content) {
    final paragraphs = content.split('\n\n');
    final expandedParagraphs = <String>[];
    
    for (int i = 0; i < paragraphs.length; i++) {
      expandedParagraphs.add(paragraphs[i]);
      
      // Agregar p√°rrafo adicional cada 2 p√°rrafos
      if (i % 2 == 1 && i < paragraphs.length - 1) {
        final additionalParagraph = _generateAdditionalParagraph(paragraphs[i]);
        if (additionalParagraph.isNotEmpty) {
          expandedParagraphs.add(additionalParagraph);
        }
      }
    }
    
    return expandedParagraphs.join('\n\n');
  }
  
  /// Generar p√°rrafo adicional
  String _generateAdditionalParagraph(String context) {
    final additionalPhrases = [
      'Esta situaci√≥n ha generado diversas reacciones en la comunidad cubana residente en Estados Unidos.',
      'Los expertos en la materia han analizado las implicaciones de esta decisi√≥n para las relaciones bilaterales.',
      'La medida ha sido recibida con expectativa por parte de los sectores econ√≥micos afectados.',
      'Las autoridades competentes han enfatizado la importancia de cumplir con todos los requisitos establecidos.',
      'Esta decisi√≥n forma parte de una serie de medidas implementadas recientemente por las autoridades.',
      'Los analistas han se√±alado que esta medida podr√≠a tener un impacto significativo en el sector.',
      'La implementaci√≥n de esta pol√≠tica est√° sujeta a ciertas regulaciones y controles espec√≠ficos.',
      'Los representantes de la comunidad han expresado su opini√≥n sobre esta importante decisi√≥n.',
    ];
    
    final random = Random();
    return additionalPhrases[random.nextInt(additionalPhrases.length)];
  }
  
  /// Generar resumen
  String _generateSummary(String content) {
    final sentences = content.split('.');
    if (sentences.length >= 2) {
      return sentences[0].trim() + '.';
    }
    return content.length > 100 ? content.substring(0, 100) + '...' : content;
  }
  
  /// Obtener imagen relevante seg√∫n categor√≠a
  String _getRelevantImage(String category) {
    final categoryImages = {
      'Pol√≠tica': [
        'https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=200&fit=crop',
      ],
      'Sociedad': [
        'https://images.unsplash.com/photo-1589829545856-d10d557cf95f?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1519501025264-65ba15a82390?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=200&fit=crop',
      ],
      'Inmigraci√≥n': [
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1589829545856-d10d557cf95f?w=400&h=200&fit=crop',
      ],
      'Noticias de Miami': [
        'https://images.unsplash.com/photo-1519501025264-65ba15a82390?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1554224155-6726b3ff858f?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=400&h=200&fit=crop',
      ],
      'Econom√≠a': [
        'https://images.unsplash.com/photo-1554224155-8d04cb21cd6c?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1589829545856-d10d557cf95f?w=400&h=200&fit=crop',
        'https://images.unsplash.com/photo-1519501025264-65ba15a82390?w=400&h=200&fit=crop',
      ],
    };
    
    final images = categoryImages[category] ?? categoryImages['Pol√≠tica']!;
    final random = Random();
    return images[random.nextInt(images.length)];
  }
  
  /// Reescribir m√∫ltiples noticias
  Future<List<RewrittenContent>> rewriteMultipleNews(List<ScrapedNews> scrapedNews) async {
    final rewrittenNews = <RewrittenContent>[];
    
    for (final news in scrapedNews) {
      final rewritten = await rewriteNews(news.title, news.content, news.category);
      rewrittenNews.add(rewritten);
    }
    
    return rewrittenNews;
  }
}

class RewrittenContent {
  final String title;
  final String content;
  final String summary;
  final String imageUrl;
  final String originalTitle;
  final String originalContent;
  
  RewrittenContent({
    required this.title,
    required this.content,
    required this.summary,
    required this.imageUrl,
    required this.originalTitle,
    required this.originalContent,
  });
}
